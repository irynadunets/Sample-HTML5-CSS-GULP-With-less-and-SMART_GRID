body {
  font-family: 'Montserrat', sans-serif;
  min-width: 320px;
  color: #004d00;
}

.wrapper {
  max-width: 1200px;
  margin: 0 auto;
  padding-left: 30px;
  padding-right: 30px;
}

.wrap {
  max-width: 960px;
  margin: 0 auto;
  height: 100%;
  padding: 0 5px;
  overflow: hidden;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
}

section.profit {
  background: #232324;
  padding: 15px 0;
}

section.profit .item {
  border: 3px solid #fff;
  background: #fff;
  text-align: center;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-flex: 1;
  flex: 1 1 400px;
}

profitItems {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  justify-content: space-around;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  margin-left: calc(8.333333333333334% + 15px);
  margin-right: calc(8.333333333333334% + 15px);
}

section.profit .item .text {
  font-style: italic;
  text-align: left;
  flex-basis: size(9);
  -webkit-box-flex: 3;
  flex-grow: 3;
  margin: 5px auto;
}

.img1 {
  flex-basis: size(3);
  height: auto;
  -webkit-box-flex: 1;
  flex-grow: 1;
  box-shadow: 10px 10px 10px green;
}

.wrap2 {
  max-width: 960px;
  margin: 0 auto;
  height: 100%;
  padding: 0 5px;
  overflow: hidden;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  justify-content: center;
}

section.profit2 {
  background: #232324;
  padding: 15px 0;
}

section.profit2 .item2 {
  border: 3px solid #fff;
  background: #fff;
  text-align: center;
}

section.profit2 .item2.text2 {
  font-style: italic;
  text-align: left;
}

.article {
  max-width: 600px;
  padding: 5px;
  margin: 20px auto;
  border: 1px solid black;
  border-radius: 10px;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  justify-content: center;
}

.meta {
  background: #ddd;
  padding: 5px 0;
  overflow: hidden;
  font-size: 20px;
}

.cat {
  -webkit-box-flex: 1;
  flex-grow: 1;
  margin-right: auto;
}

.dt {
  -webkit-box-flex: 1;
  flex-grow: 1;
}

/*для адаптивности картинок*/

.row {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-pack: center;
  justify-content: center;
}

.item {
  text-align: center;
  margin: 15px;
  width: 500px;
}

.item2 {
  text-align: center;
  margin: 15px;
  width: 600px;
}

.item3 {
  text-align: center;
  margin: 15px;
  width: 600px;
  background: grey;
}

img {
  flex-basis: 300px;
  max-width: 100%;
  height: auto;
}

section {
  padding: 100px;
}

h3 {
  font-style: italic;
  font-size: 42px;
  font-family: 'Palatino linotype', 'Book Antigua', serif;
}

h4 {
  font-weight: 600;
  font-size: 44px;
  margin-bottom: 20px;
}

/*--------------header-------------*/

.main-header {
  background: url() center no-repeat;
  background: cover;
  height: 100vh;
  min-height: 600px;
  positive: relative;
}

@media screen and (max-width: 1200px) {
  .item {
    width: calc(100%-10px);
  }

  .item:nth-child(even) {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    flex-direction: row-reverse;
  }
}

@media screen and (max-width: 842px) {
  .item {
    width: calc(100%-10px);
  }

  .item:nth-child(even) {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    flex-direction: row-reverse;
  }
}

@media screen and (max-width: 780px) {
  .wrapper {
    padding-left: 15px;
    padding-right: 15px;
  }

  profitItems {
    width: calc(100% - 30px);
  }
}

@media screen and (max-width: 560px) {
  profitItems {
    max-width: 400px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
